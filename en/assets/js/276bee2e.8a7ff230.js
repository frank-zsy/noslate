"use strict";(self.webpackChunknoslate_website=self.webpackChunknoslate_website||[]).push([[3703],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,f=d["".concat(u,".").concat(m)]||d[m]||l[m]||s;return n?r.createElement(f,a(a({ref:t},c),{},{components:n})):r.createElement(f,a({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,a=new Array(s);a[0]=d;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var p=2;p<s;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6255:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const s={},a="Customize Outbound service proxy",i={unversionedId:"noslate_workers/tutorials/custom_outbound",id:"noslate_workers/tutorials/custom_outbound",title:"Customize Outbound service proxy",description:"In this section, take the access database proxy as an example to introduce how to implement a custom proxy service:",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/noslate_workers/tutorials/custom_outbound.md",sourceDirName:"noslate_workers/tutorials",slug:"/noslate_workers/tutorials/custom_outbound",permalink:"/en/docs/noslate_workers/tutorials/custom_outbound",draft:!1,editUrl:"https://github.com/noslate-project/noslate/tree/main/site/docs/noslate_workers/tutorials/custom_outbound.md",tags:[],version:"current",frontMatter:{},sidebar:"common",previous:{title:"Custom Gateway",permalink:"/en/docs/noslate_workers/tutorials/custom_gateway"},next:{title:"\u5982\u4f55\u542f\u52a8 Noslate Workers",permalink:"/en/docs/noslate_workers/tutorials/start_noslate_workers"}},u={},p=[],c={toc:p};function l(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"customize-outbound-service-proxy"},"Customize Outbound service proxy"),(0,o.kt)("p",null,"In this section, take the access database proxy as an example to introduce how to implement a custom proxy service:"),(0,o.kt)("p",null,"Take the example of offering to find products by product ID"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"const sequelize = require('sequelize');\n// The form of require(modulePath) is used when loading, so it must be exported based on the commonJS specification\nmodule.exports = class DaprProvider {\n  // Initialization method to ensure the agent is running and serviceable\n  async ready() {\n    const { Sequelize } = require('sequelize');\n\n    const sequelize = new Sequelize({\n        dialect: 'mysql',\n        host: 'host.to.mysql',\n        port: 3306,\n        username: 'xxx',\n        password: 'xxx'\n    });\n\n    await sequelize.auth();\n  }\n  // Close method, used to recycle resources\n  async close() {}\n    /**\n   * Optionally implement the invoke interface. For details, please refer to the dapr protocol definition:\n   * @see: https://docs.dapr.io/reference/api/service_invocation_api/\n   * @param {DaprInvokeOptions} options\n   *  - @property {string} app\n   *  - @property {string} methodName\n   *  - @property {Buffer} data\n   * @returns {Promise<DaprResponse>}\n   *  - @property {number} status\n   *  - @property {Buffer} data\n   */\n    async invoke(options) {}\n  /**\n   * Optionally implement the bingding interface. For details, please refer to the dapr protocol definition:\n   * @see: https://docs.dapr.io/reference/api/service_invocation_api/\n   * @param {DaprBindingOptions} options\n   *  - @property {string} name\n   *  - @property {string} metadata\n   *  - @property {string} operation\n   *  - @property {Buffer} data\n   * @returns {Promise<DaprResponse>}\n   *  - @property {number} status\n   *  - @property {Buffer} data\n   */\n  async binding(options) {\n    if (name === 'queryById') {\n        const result = await sequelize.query(`select * from product where id=${options.data}`);\n\n        return {\n            statu: 200,\n            data: result\n        }\n    }\n\n    return {\n        status: 404,\n        data: 'Not Found'\n    };\n  }\n}\n")))}l.isMDXComponent=!0}}]);